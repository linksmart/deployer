name: CICD

on: [push]

jobs:

  build:
    if: "!contains(toJSON(github.event.commits.*.message), '[skip-ci]')"
    name: Build Snapshots
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v1
        
      - name: Build linux-amd64
        run: sh build/linux/build.sh
          
      - name: Upload linux-amd64 snapshots (manager+agent)
        uses: actions/upload-artifact@v2
        with:	
          name: deployer-linux-amd64	
          path: build/linux/bin
          retention-days: 3
      
      - name: Build linux-arm
        run: docker run -v $(pwd):/home farshidtz/zmq4-arm -mod=vendor -o deployment-agent-linux-arm ./agent
      
      - name: Upload linux-arm snapshot (agent)
        uses: actions/upload-artifact@v2
        with:	
          name: deployment-agent-linux-arm
          path: deployment-agent-linux-arm
          retention-days: 3
      
  build-docker:
    if: "!contains(toJSON(github.event.commits.*.message), '[skip-ci]')"
    name: Build and Push Docker Images
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Checkout
        uses: actions/checkout@v1
        
      - name: Download linux-amd64 snapshots
        uses: actions/download-artifact@v2
        with:
          name: deployer-linux-amd64
          path: bin
     
      - name: Github Container Registry login
        run: echo "${{secrets.CR_PAT}}" | docker login ghcr.io -u farshidtz --password-stdin
      
      - name: Build Manager 
        run: docker build -f manager/Dockerfile -t ghcr.io/linksmart/deployer/manager --label "GITHUB_RUN_NUMBER=${{github.run_number}}" .

      - name: Push Manager 
        run: docker push ghcr.io/linksmart/deployer/manager
        
      - name: Build Agent
        run: docker build -f agent/Dockerfile -t ghcr.io/linksmart/deployer/agent --label "GITHUB_RUN_NUMBER=${{github.run_number}}" .

      - name: Push Agent 
        run: docker push ghcr.io/linksmart/deployer/agent

  build-debian:
    if: "!contains(toJSON(github.event.commits.*.message), '[skip-ci]')"
    name: Build Debian Package
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Checkout
        uses: actions/checkout@v1
      
      - name: Build package (all arch)
        run: sh build/package/deb-all/build.sh ${{github.run_number}}
      
      - name: Upload Debian package
        uses: actions/upload-artifact@v2
        with:	
          name: deployment-agent-debian-package-all	
          path: build/package/deb-all/*.deb
          retention-days: 3
            
      - name: Download linux-arm snapshot
        uses: actions/download-artifact@v2
        with:
          name: deployment-agent-linux-arm
          path: build/package/deb-armv7 
           
      - name: Build package (armv7)
        run: sh build/package/deb-armv7/build.sh deployment-agent-linux-arm ${{github.run_number}}
      
      - name: Upload Debian packages
        uses: actions/upload-artifact@v2
        with:	
          name: deployment-agent-debian-package-armv7
          path: |
            build/package/deb-armv7/*.deb
            build/package/deb-armv7/install.sh
          retention-days: 3

  integration-test:
    if: "!contains(toJSON(github.event.commits.*.message), '[skip-ci]') && !contains(toJSON(github.event.commits.*.message), '[skip-test]')"
    name: Run Integration Tests
    needs: build-docker
    runs-on: ubuntu-latest
    steps:
      - name: Set up Go 1.x
        uses: actions/setup-go@v2
        with:
          go-version: ^1.14
        id: go

      - name: Check out code
        uses: actions/checkout@v2

      - name: Run tests
        run: go test ./tests -v -failfast